const fs = require('fs');
const path = require('path');
const ffmpeg = require('fluent-ffmpeg');
const ffmpegPath = require('@ffmpeg-installer/ffmpeg').path;

// –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ FFmpeg
ffmpeg.setFfmpegPath(ffmpegPath);

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–∂–∞—Ç–∏—è
const inputDir = 'C:\\Users\\Dmitriy\\Videos\\S.T.A.L.K.E.R.  Call of Pripyat'; // –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ
const fps = 30;
const videoBitrate = '5000k';
const audioBitrate = '128k';
const resolution = '1280x720';

// –§—É–Ω–∫—Ü–∏—è —Å–∂–∞—Ç–∏—è –≤–∏–¥–µ–æ
function compressVideo(inputPath, outputPath) {
  ffmpeg(inputPath)
    .videoCodec('libx264')
    .audioCodec('aac')
    .outputOptions([
      `-r ${fps}`,
      `-b:v ${videoBitrate}`,
      `-b:a ${audioBitrate}`,
      `-vf scale=${resolution}`
    ])
    .on('start', (cmd) => console.log(`–ó–∞–ø—É—Å–∫: ${cmd}`))
    .on('progress', (progress) => console.log(`–ü—Ä–æ–≥—Ä–µ—Å—Å: ${progress.timemark}`))
    .on('end', () => console.log(`‚úÖ –ì–æ—Ç–æ–≤–æ: ${path.basename(outputPath)}`))
    .on('error', (err) => console.error(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`))
    .save(outputPath);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function readDirectory(dir) {
  fs.readdirSync(dir).forEach(file => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);

    if (stat.isDirectory()) {
      readDirectory(filePath); // –†–µ–∫—É—Ä—Å–∏—è –¥–ª—è –¥–æ—á–µ—Ä–Ω–∏—Ö –ø–∞–ø–æ–∫
    } else if (path.extname(file) === '.mp4') {
      const compressedName = `${path.basename(file, '.mp4')}_compressed.mp4`;
      const outputPath = path.join(dir, compressedName);
      console.log(`üöÄ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${file}`);
      compressVideo(filePath, outputPath);
    }
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
readDirectory(inputDir);
